import java.text.SimpleDateFormat

plugins {
    id "com.jfrog.bintray" version "1.4"
}
String bintrayUser = project["bintrayUser"]
String bintrayApiKey = project["bintrayApiKey"]

allprojects {
    description "This provides type introspection and generation of GraphQL from Pojos."
    group 'com.bretpatterson'

    def releaseVersion = project.properties.containsKey("releaseVersion") ? project["releaseVersion"]: "1.0.0-SNAPSHOT"

    bintrayUser = project["bintrayUser"]
    bintrayApiKey = project["bintrayApiKey"]
    println("User="+bintrayUser+" api="+bintrayApiKey)

    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    ext {
        jacksonVersion = "2.5.1";
        graphQLJavaVersion = "2.1.0";
        jacocoReportsDir = "$buildDir/reports/jacoco"
        junitVersion = "4.12"
        mockitoVersion = "1.9.5"
    }

    version = releaseVersion ? releaseVersion : new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())

    jar {
        from "${project.rootDir}/LICENSE.md"
    }

    defaultTasks "compileJava", "test", "jacocoTestReport"


    jacocoTestReport {
        dependsOn build
        reports {
            xml.enabled false
            csv.enabled false
            html.destination jacocoReportsDir
        }
    }
    jacoco {
        toolVersion = "0.7.1.201405082137"
    }

    test {
        jacoco {
            append = false
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
            classDumpFile = file("$buildDir/jacoco/classpathdumps")
        }
    }

    task sourcesJar(type: Jar) {
        dependsOn classes
        classifier 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives file("build/libs/${project.name}-" + project.version + ".jar")
        archives sourcesJar
        archives javadocJar
    }

    repositories {
        mavenLocal();
        mavenCentral();
        maven {
            url  "https://dl.bintray.com/andimarek/graphql-java"
        }
    }

    publishing {
        publications {
            schemagenGraphQL(MavenPublication) {
                version version
                from components.java

                artifact sourcesJar {
                    classifier "sources"
                }
                artifact javadocJar {
                    classifier "javadoc"
                }
                pom.withXml {
                    asNode().children().last() + {
                        resolveStrategy = Closure.DELEGATE_FIRST
                        name project.name
                        description project.description

                        url "https://github.com/bpatters/schemagen-graphql"
                        scm {
                            url "https://github.com/bpatters/schemagen-graphql"
                            connection "https://github.com/bpatters/schemagen-graphql"
                            developerConnection "https://github.com/bpatters/schemagen-graphql"
                        }
                        licenses {
                            license {
                                name 'MIT'
                                url 'https://github.com/bpatters/schemagen-graphql/blob/master/LICENSE.md'
                                distribution 'repo'
                            }
                        }
                        developers {
                            developer {
                                id 'bpatters'
                                name 'Bret Patterson'
                            }
                        }
                    }
                }
            }
        }
    }

    bintray {
        user = bintrayUser
        key = bintrayApiKey
        publications = ['schemagenGraphQL']
        publish = true
        pkg {
            repo = 'schemagen-graphql'
            name = 'schemagen-graphql'
            desc = 'GraphQL Schema generation in Java'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/bpatters/schemagen-graphql'
        }
    }

    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}


dependencies {
    compile ("com.graphql-java:graphql-java:${graphQLJavaVersion}")
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'com.google.guava:guava:19.0'

    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-all:${mockitoVersion}"
    testCompile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    testCompile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
}


